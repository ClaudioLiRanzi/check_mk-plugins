#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#################################################################
#---------------------------------------------------------------#
# Author: Markus Weber                                          #
# Contact: markus.weber@lfst.bayern.de                          #
# License: GPL                                                  #
# File: slapd_stats                                             #
# Version: 1.0.0                                                #
# Revision: 04.10.2017                                          #
# Description: This check monitors the state of power supply    #
# units via idarc mib (IDRAC-MIB-SMIv2.mib) of Dell PowerEdge   #
# Servers.                                                      #
#                                                               #
#################################################################

# from idrac-smiv2.mib
#
#--
#-- Status
#--
#ObjectStatusEnum        ::= TEXTUAL-CONVENTION
#    STATUS current
#    DESCRIPTION
#        "Status of an object."
#    SYNTAX              INTEGER {
#    other(1),           -- the status of the object is not one of the
#                        --  following:
#    unknown(2),         -- the status of the object is unknown
#                        --  (not known or monitored)
#    ok(3),              -- the status of the object is ok
#    nonCritical(4),     -- the status of the object is warning, non-critical
#    critical(5),        -- the status of the object is critical (failure)
#    nonRecoverable(6)   -- the status of the object is non-recoverable (dead)
#}

def inventory_dell_idrac_powersupplies(info):
    inventory = []
    for line in info:
        item = re.sub("\.", "-", line[2])
        inventory.append( ( item, None ) )
    return inventory

def check_dell_idrac_powersupplies(item, _no_params, info):
    try:
        for oid_end, status, fqdd, voltage in info:
            if voltage == '':
                voltage = "0"

            if item == re.sub("\.", "-", fqdd):
                state = 0
                infotext = ""
                if status == "5" or status == "6":
                    state = 2
                    infotext += "%s is dead or has failures" % ( fqdd )
                elif status == "4":
                    state = 1
                elif status == "1" or status == "2":
                    state = 3
                else:
                    state = 0
                    infotext += "%s is running on %s volts." \
                                % ( fqdd, voltage )
        
                perfdata = [ ( "voltage", str(voltage)+"v", 0 ) ]
                return state, infotext, perfdata
    except KeyError:
        return 3, "item not present anymore", []

    return 3, "unknown power supply"

check_info["dell_idrac_powersupplies"] = {
    "check_function"        : check_dell_idrac_powersupplies,
    "inventory_function"    : inventory_dell_idrac_powersupplies,
    "service_description"   : "Power Supply %s",
    "has_perfdata"          : True,
    "snmp_info"             : ( ".1.3.6.1.4.1.674.10892.5.4.600.12.1", [
                                      OID_END,
                                      "5", # powerSupplyStatus 0
                                      "15", # powerSupplyFQDD 1
                                      "16", # Volt 2
                              ]),
    "snmp_scan_function"    : lambda oid: oid('.1.3.6.1.2.1.1.2.0') == ".1.3.6.1.4.1.674.10892.5",
}

